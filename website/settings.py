"""
Django settings for project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "ChangeMe"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

ADMINS = (("NAME", "EMAIL"),)

# Application definition

INSTALLED_APPS = (
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Although it's not required that you use the sites framework, it's strongly encouraged
    "django.contrib.sites",
    "bootstrap3",
    # "registration",
    "website",
)

MIDDLEWARE_CLASSES = (
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.auth.middleware.SessionAuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "website.middleware.RedirectionMiddleware",
)

ROOT_URLCONF = "website.urls"

# Please refer to https://docs.djangoproject.com/en/1.8/ref/contrib/sites/
# for additional information about Django sites framework
SITE_ID = 1

DEBUG_TOOLBAR_PANELS = [
    "debug_toolbar.panels.versions.VersionsPanel",
    "debug_toolbar.panels.timer.TimerPanel",
    "debug_toolbar.panels.settings.SettingsPanel",
    "debug_toolbar.panels.headers.HeadersPanel",
    "debug_toolbar.panels.request.RequestPanel",
    "debug_toolbar.panels.sql.SQLPanel",
    "debug_toolbar.panels.staticfiles.StaticFilesPanel",
    "debug_toolbar.panels.templates.TemplatesPanel",
    "debug_toolbar.panels.cache.CachePanel",
    "debug_toolbar.panels.signals.SignalsPanel",
    "debug_toolbar.panels.logging.LoggingPanel",
    "debug_toolbar.panels.redirects.RedirectsPanel",
    "template_timings_panel.panels.TemplateTimings.TemplateTimings",
]


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "website", "templates")]
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "wsgi.application"


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/New_York"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# SMTP server configuration
EMAIL_HOST = ""
EMAIL_PORT = 25
EMAIL_USE_TLS = True

# Your project will probably also have static assets that aren't tied to a particular app. In addition to using
# a static/ directory inside your apps, you can define a list of directories (STATICFILES_DIRS) in your settings
# file where Django will also look for static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "website", "static"),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_URL = "/static/"

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "apache", "static")

# Absolute filesystem path to the directory that will hold user-uploaded files.
MEDIA_ROOT = os.path.join(BASE_DIR, "website", "media")

LOGIN_URL = "/auth/login/"
LOGOUT_URL = "/auth/logout/?next=/"

# Django logging configuration
# https://docs.djangoproject.com/en/1.8/topics/logging/
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "WARNING",
            "propagate": True,
        },
        "website": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propogate": True,
        }
    },
    "formatters": {
        "simple": {
            "format": "%(levelname)s: [%(name)s:%(lineno)s] %(message)s"
        }
    }
}

# Database manager configuration
DATABASE_MANAGER_DIR = os.path.join(MEDIA_ROOT, "databases")

# https://pypi.python.org/pypi/django-crontab
# django-crontab 0.6.0 settings
# CRONJOBS = [
#     # Run database backup every day at 4am server time
#     ("0 4 * * *", "website.apps.database_manager.cron.backup_django_database")
# ]

# This is the number of days users will have to activate their accounts after registering.
# If a user does not activate within that period, the account will remain permanently inactive and may be deleted
# by maintenance scripts provided in django-registration.
ACCOUNT_ACTIVATION_DAYS = 7


LOGIN_EXEMPT_URLS = ["/auth", "password_reset", "reset/"]
LOGIN_REDIRECT_URL = "/"

SERVER_EMAIL = "django@localhost"
DEFAULT_FROM_EMAIL = "django@localhost"
EMAIL_SUBJECT_PREFIX = ""
MANAGERS = (("NAME", "EMAIL"),)


try:
    # Optional settings specific to the local system (for example, custom
    # settings on a developer's system).  The file "settings_local.py" is
    # excluded from version control.
    from settings_local import *
except ImportError:
    pass
